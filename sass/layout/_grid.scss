.row {
	// if viewport is smaller, then it will fill 100% of available space
	max-width: $grid-width;
	// center block element inside another block element
	margin: 0 auto;

	// select everything except the last-child
	&:not(:last-child) {
		// put vertical gutter on everything but the last child
		margin-bottom: $gutter-vertical;

		@include respond(tab-port) {
			margin-bottom: $gutter-vertical-small;
		}
	}

	@include respond(tab-port) {
		max-width: 50rem;
		padding: 0 3rem;
	}

	// stop first row div from having 0 height
	@include clearfix;

	// use attribute selector to select all class attributes that start with col-
	[class^="col-"] {
		float: left;
		// apply margin-right to all but right most column
		&:not(:last-child) {
			margin-right: $gutter-horizontal;

			@include respond(tab-port) {
				margin-right: 0;
				margin-bottom: $gutter-vertical-small;
			}
		}

		@include respond(tab-port) {
			width: 100% !important;
		}
	}

	// columns are always inside of rows
	.col-1-of-2 {
		// calc() allows us to mix units
		width: calc((100% - #{$gutter-horizontal}) / 2);
	}

	.col-1-of-3 {
		width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
	}

	.col-2-of-3 {
		width: calc(
			(2 * (100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
		);
	}

	.col-1-of-4 {
		width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
	}

	.col-2-of-4 {
		width: calc(
			2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
		);
	}

	.col-3-of-4 {
		width: calc(
			3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
		);
	}
}
