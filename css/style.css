/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

/* Reset to normalize across all browsers */
*,
/* set for pseudo-before-after elements */
*::after,
*::before {
	margin: 0;
	padding: 0;
	/* Changes the box models so that the borders and padding aren't added to total width */
	/* moved to body to use inheritance */
	/* box-sizing: border-box; */
	box-sizing: inherit;
}

html {
	/* set root font-size to 10px so that rem/em is easy to set */
	/* but that overwrites the browser's default font-size and doesnt allow for user scaling */
	/* default browser font-size is 16px, so we will use 62.5% */
	font-size: 62.5%;
}

/* Setting fonts for project, putting in body will cause everything to inherit */
body {
	font-family: "Lato", sans-serif;
	font-weight: 400;
	/* commented out bc we will now use rem/em */
	/* font-size: 16px; */
	line-height: 1.7;
	color: #777;
	/* white border around entire web page */
	padding: 3rem;
	/* Changes the box models so that the borders and padding aren't added to total width */
	box-sizing: border-box;
}

.header {
	/* set header at 95% of viewport height */
	height: 95vh;
	/* set bg image from image folder and set the linear gradient */
	/* cover will always try to fit the element in the viewport */
	background-size: cover;
	/* no matter the viewport size, the top will not get cropped */
	background: linear-gradient(
			to right bottom,
			rgba(126, 213, 111, 0.8),
			rgba(40, 180, 133, 0.8)
		),
		url("../img/hero.jpg") top;
	/* gives the bottom slant effect, coordinates go clockwise from top left, x positive in right, y positive down */
	clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
	/* added for logo-box absolute position reference */
	position: relative;
}

/* div containing the logo in top left of header */
.header__logo-box {
	position: absolute;
	/* px count starts from top left of parent with position: relative */
	top: 4rem;
	left: 4rem;
}

/* the logo in the top left */
.header__logo {
	/* width/height is automatically set when we set only one*/
	height: 3.5rem;
}

/* container for header text and button */
.header__text-box {
	/* centering */
	position: absolute;
	/* did 40% instead of 50% bc of clipping; again top and bottom are relative to the parent element */
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%);
	/* added this to center the text inside of the button */
	text-align: center;
}

/* h1 element */
.heading-primary {
	color: #fff;
	text-transform: uppercase;
	/*fix shakiness of some animations*/
	backface-visibility: hidden;
	margin-bottom: 6rem;
}

/* "Outdoors" */
.heading-primary--main {
	/* sets this on top bc span is inline */
	display: block;
	font-size: 6rem;
	font-weight: 400;
	letter-spacing: 3.5rem;

	/* animation properties - animation-name and animation-duration are required */
	/*animation-name: moveInLeft;*/
	/*animation-duration: 1s;*/
	/*animation-timing-function: ease-out;*/
	/*animation shorthand*/
	animation: moveInLeft 1s ease-out;

	/*animation-iteration-count: 3;*/
	/*animation-delay: 3s;*/
}

/* "is where life happens" */
.heading-primary--sub {
	/* sets this on bottom bc span is inline */
	display: block;
	font-size: 2rem;
	font-weight: 700;
	letter-spacing: 1.75rem;

	/* animation properties - animation-name and animation-duration are required */
	/*animation-name: moveInRight;*/
	/*animation-duration: 1s;*/
	/*animation-timing-function: ease-out;*/
	/* animation shorthand */
	animation: moveInRight 1s ease-out;
}

/* creating animations - browsers are optimized to opacity and transform animations */
@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-10rem);
	}

	80% {
		transform: translateX(1rem);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

/* creating animations - browsers are optimized to opacity and transform animations */
@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(10rem);
	}

	80% {
		transform: translateX(-1rem);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

/* creating animations - browsers are optimized to opacity and transform animations */
@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(3rem);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

/* header button styles - :link pseudoclass to treat as a link, :visited so it will look the same visited or not */
.btn:link,
.btn:visited {
	text-transform: uppercase;
	text-decoration: none;
	padding: 1.5rem 4rem;
	/* display as inline-block, should do this if we want to get some paddings? */
	display: inline-block;
	/* give rounded edges */
	border-radius: 10rem;
	/* enable all properties to be animated */
	transition: all 0.2s;
	/* so we can set absolute position of btn::after */
	position: relative;
	font-size: 1.6rem;
}

.btn:hover {
	transform: translateY(-0.3rem);
	/* x y blur color */
	box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
	transform: translateY(-0.1rem);
	box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
	background-color: #fff;
	color: #777;
}

/* ::after acts like a virtual element */
.btn::after {
	/* must specify content and display */
	content: "";
	display: inline-block;
	/* gives same dimensions and btn */
	height: 100%;
	width: 100%;
	/* give same styles */
	border-radius: 10rem;
	/* put it behing btn */
	position: absolute;
	top: 0;
	left: 0;
	z-index: -1;
	/* enable/control animations? */
	transition: all 0.4s;
}

/* btn-white pseudo styles */
.btn-white::after {
	background-color: #fff;
}

/* :hover pseudo states */
.btn:hover::after {
	/* make it bigger */
	transform: scaleX(1.4) scaleY(1.6);
	opacity: 0;
}

.btn--animated {
	animation: moveInBottom 0.5s ease-out 0.75s;
	/* applies 0% keyframe before animation starts */
	animation-fill-mode: backwards;
}
